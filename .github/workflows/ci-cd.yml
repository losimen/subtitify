name: CI/CD Pipeline

on:
  push:
    branches: [ master-laravel ]
  pull_request:
    branches: [ master-laravel ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'
        extensions: mbstring, xml, ctype, iconv, intl, dom, filter, gd, iconv, json, mbstring, phar, posix, session, simplexml, tokenizer, xml, xmlreader, xmlwriter, zip, bcmath, exif, pcntl

    - name: Install dependencies
      run: |
        composer install --no-dev --optimize-autoloader --no-interaction
        npm ci

    - name: Build frontend assets
      run: npm run build

    - name: Create deployment package
      run: |
        tar -czf subtitify-deploy.tar.gz \
          --exclude='.git' \
          --exclude='node_modules' \
          --exclude='tests' \
          --exclude='.github' \
          --exclude='storage/logs' \
          --exclude='storage/framework/cache' \
          --exclude='storage/framework/sessions' \
          --exclude='storage/framework/views' \
          .

    - name: Deploy to custom server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        port: ${{ secrets.SERVER_PORT || 22 }}
        script: |
          # Create backup of current deployment
          if [ -d "/var/www/subtitify" ]; then
            sudo cp -r /var/www/subtitify /var/www/subtitify-backup-$(date +%Y%m%d-%H%M%S)
          fi
          
          # Create deployment directory
          sudo mkdir -p /var/www/subtitify
          sudo chown $USER:$USER /var/www/subtitify

    - name: Upload files to server
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        port: ${{ secrets.SERVER_PORT || 22 }}
        source: "subtitify-deploy.tar.gz"
        target: "/var/www/subtitify/"

    - name: Extract and setup on server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        port: ${{ secrets.SERVER_PORT || 22 }}
        script: |
          cd /var/www/subtitify
          
          # Extract files
          tar -xzf subtitify-deploy.tar.gz
          rm subtitify-deploy.tar.gz
          
          # Install production dependencies
          composer install --no-dev --optimize-autoloader --no-interaction
          
          # Set permissions
          sudo chown -R www-data:www-data /var/www/subtitify
          sudo chmod -R 755 /var/www/subtitify
          sudo chmod -R 775 /var/www/subtitify/storage
          sudo chmod -R 775 /var/www/subtitify/bootstrap/cache
          
          # Laravel optimizations
          php artisan config:cache
          php artisan route:cache
          php artisan view:cache
          
          # Restart web server
          sudo systemctl reload apache2 || sudo systemctl reload nginx
          
          echo "ðŸš€ Deployment completed successfully!"
